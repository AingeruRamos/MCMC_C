// Copyright Notice ===========================================================
//
// model_template.h, Copyright (c) 2023 Aingeru Ramos
//
// All Rights Reserved ========================================================
//
// This file is part of MCMC_C software project.
//
// MCMC_C is propietary software. The author has all the rights to the work.
// No third party may make use of this work without explicit permission of the author.
//
// ============================================================================

#ifndef _MODEL_H_
#define _MODEL_H_

#include "constants.h"
#include "stack.h"

/**
 * @class ReplicaIterationResult
 * @brief
 * * Instances of this class saves the data generated 
 * * by one iteration of the MCMC
*/
class ReplicaIterationResult {
    public:
        /**
         * @name ReplicaIterationResult
         * @remark constructor
        */
        _CUDA_DECOR_ ReplicaIterationResult();

        /**
         * @name copy
         * @return Copy of this ReplicaIterationResult
         * @brief 
         * * Creates a copy of this ReplicaIterationResult 
        */
        _CUDA_DECOR_ ReplicaIterationResult* copy();
};

/**
 * @class Replica
 * @brief
 * * Instances of this class represents a replica
 * * with certain behaviour (The model)
*/
class Replica {
    public:

        Stack<IterationResult*, N_ITERATIONS> _results;

        /**
         * @name init
         * @brief
         * * Initializes the replica
        */
        _CUDA_DECOR_ void init();

        /**
         * @name trial
         * @return A trial
         * @brief
         * * Generates a trial of the replica
        */
        _CUDA_DECOR_ void* trial();

        /**
         * @name delta
         * @param trial A trial generated by 'trial()'
         * @return Value of the difference of the actual replica and 
         * the replica result of applying the trial
         * @brief
         * * Calculate the effect of accept the trial
        */
        _CUDA_DECOR_ double delta(void* trial);

        /**
         * @name move
         * @param trial A trial generated by 'trial()'
         * @brief
         * * Apply the trial to the replica
        */
        _CUDA_DECOR_ void move(void* trial);

        /**
         * @name save
         * @param trial A trial generated by 'trial()'
         * @brief
         * * Save the properties of the replica
        */
        _CUDA_DECOR_ void save(void* trial);
};

// ANY AUXILIARY FUNCTION FOR THE ABOVE METHODS

#define MODEL_NAME Replica
#define MODEL_ITER ReplicaIterationResult

#endif